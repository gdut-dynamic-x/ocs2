name: deb-package

on:
  push:
    tags:
      - '*'
    branches:
      - main
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with: 
          path: src/ocs2 
      - uses: ros-tooling/setup-ros@v0.4
        with:
          required-ros-distributions: noetic
      - name: Add temp rosdep index
        run: |
          echo "yaml file://`pwd`/src/ocs2/rosdep.yaml" | sudo tee /etc/ros/rosdep/sources.list.d/ocs2.list
          sudo rosdep update
      - name: Checkout dependencies
        run: |
          git clone --recurse-submodules https://github.com/leggedrobotics/pinocchio.git src/pinocchio
          git clone --recurse-submodules https://github.com/leggedrobotics/hpp-fcl.git src/hpp-fcl
          git clone https://github.com/leggedrobotics/ocs2_robotic_assets.git src/ocs2_robotic_assets 
      - name: Install RaiSim
        run: |
          git clone --depth 1 https://github.com/raisimTech/raisimLib.git -b v1.1.01 src/raisim_tech
          cd src/raisim_tech
          mkdir build
          cd build
          cmake .. -DPYTHON_EXECUTABLE=$(python3 -c "import sys; print(sys.executable)")
          make -j4 && checkinstall
      - name: Package deb
        uses: gdut-dynamic-x/ros-build-deb-action@v1
        with:
          ros_distro: noetic
          timestamp: true
      - name: Upload deb package to source
        if: ${{ github.repository == 'gdut-dynamic-x/ocs2' }}
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SOURCE_SSH_HOST }}
          username: ${{ secrets.SOURCE_SSH_NAME }}
          key: ${{ secrets.SOURCE_SSH_KEYGEN }}
          source: "*.deb"
          target: "/usr/local/web/rm-source/ubuntu/incoming/"
      - name: Deploy deb package to source
        if: ${{ github.repository == 'gdut-dynamic-x/ocs2' }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SOURCE_SSH_HOST }}
          username: ${{ secrets.SOURCE_SSH_NAME }}
          key: ${{ secrets.SOURCE_SSH_KEYGEN }}
          script: |
                  cd /usr/local/web/rm-source/ubuntu/incoming/
                  reprepro  -s  -b  /usr/local/web/rm-source/ubuntu/  --waitforlock  1000  includedeb focal /usr/local/web/rm-source/ubuntu/incoming/*.deb && \
                  rm -f *.deb
